g=9.82; %gravitation
vinkel= 45; %utgångsvinkel
y0=0; %Start höjd, backens-nivå
v0 = hastighet(0.6); %pilens utgångshastighet från ballistan

v0y = v *sind(vinkel); %utgångshastighet i y-led
v0x = v *cosd(vinkel); %utgångshastighet i x-led


% Total distance
d = (v*cosd(vinkel)/g)*(v*sind(vinkel)+sqrt((v*sind(vinkel)^2+2*g*y0)));

maxhojd = ((v^2)*sind(2*vinkel))/(2*g);
timeOfFlight = d/(v*cosd(vinkel));

yv = v*sind(vinkel)-(g*x)/(v*cosd(vinkel));
t = 0:0.01:2*v0y/g;
% t = [0:0.01:timeOfFlight];
% X kord för pil
x= t*v;
% Y kord för pil
y= y0+x.*tand(vinkel)-(g*x.^2)/(2*((v*cosd(vinkel))^2));

% Hastighet vid X
vabs = sqrt(v^2-2*g*x.*tand(vinkel)+((g*x)/(v*cosd(vinkel))^2));

% hastighet i x led
xv = v*cosd(vinkel);

% Hastighet i y led

plot(x,y)


%3D
% ax= axes('Xlim', [-50 50], 'YLim', [-10 600], 'ZLim', [0 200]);
% view(3);
% grid on;
% axis equal;
% 
% [xc yc zc] = cylinder([0.2 0.0,]);
% [x y z]= cylinder([0.2 0.2]);
% 
% h(1) = surface(xc, zc, yc, 'FaceColor', 'red');
% h(2) = surface(10*x, -15*z, 10*y, 'FaceColor', 'red');
% 
% t= hgtransform('Parent', ax);
% 
% set(h, 'Parent', t);
% 
% set(gcf, 'Renderer', 'opengl');
% 
% drawnow
% 
% lat = langd;
% lon = hojd;
% bea = hojd/100;
% % lon = [0 1 2 3 4 5 6 7 8 9 10];
% % lat = [0 1 1 1 1 1 -0.5 -1 -1];
% % bea = [0.5 0.4 0.3 0.2 0.1 0 -0.1 -0.2 -0.3 -0.4 -0.5 -0.5 ];
% 
% for i = 1:numel(lat)
%     trans = makehgtform('translate', [0, lon(i), lat(i)]);
%     rotx = makehgtform('xrotate',bea(i));
%     set(t,'Matrix',trans*rotx);
% %     set(t,'Matrix',trans);
%     pause(0.01)
% end
